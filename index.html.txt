<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FireGuard Chatbot</title>
    <style>
        body { font-family: Arial, sans-serif; text-align: center; }
        #chatbox { width: 80%; height: 300px; border: 1px solid black; overflow-y: auto; margin: 10px auto; padding: 10px; }
        #userInput { width: 70%; padding: 10px; }
        #sendButton { padding: 10px; }
    </style>
</head>
<body>
    <h1>ðŸ”¥ FireGuard Chatbot</h1>
    <div id="chatbox"></div>
    <input type="text" id="userInput" placeholder="Type your message...">
    <button id="sendButton" onclick="sendMessage()">Send</button>

    <script>
        // ðŸš€ FireGuard AI Neural Network - Self-Learning Content Filter
        class FireGuardAI {
            constructor() {
                this.restrictedWords = new Set([
                    "porn", "p0rn", "nude", "nÃ¼de", "xxx", "sex", "s3x", "seggs", "nsfw", "nfsw", 
                    "adult", "explicit", "erotic", "gore", "violence", "abuse", "suicide", 
                    "selfharm", "self-harm", "kys", "kill", "r@pe", "p0rnography", "naked", 
                    "tits", "b00bs", "c0ck", "v@gina", "d1ck"
                ]);
                
                this.restrictedWebsites = new Set([
                    ".porn", ".sex", ".xxx", ".adult", ".nsfw", ".nude",
                    "pornhub.com", "xvideos.com", "xnxx.com", "redtube.com",
                    "onlyfans.com", "chaturbate.com", "camsoda.com"
                ]);

                this.learningMemory = new Map(); // ðŸ”¥ AI Learning Storage
            }

            // âœ… Function to analyze text content
            analyzeContent(text) {
                let lowerText = text.toLowerCase();
                let words = lowerText.split(" ");
                for (let word of words) {
                    if (this.restrictedWords.has(word)) {
                        return { flagged: true, reason: "ðŸš¨ Inappropriate text detected!" };
                    }
                }
                return { flagged: false };
            }

            // âœ… Function to analyze unsafe websites
            analyzeWebsite(url) {
                for (let site of this.restrictedWebsites) {
                    if (url.includes(site)) {
                        return { flagged: true, reason: "ðŸš¨ Unsafe website detected!" };
                    }
                }
                return { flagged: false };
            }

            // ðŸ”¥ AI Learning Function - Updates Word Database
            learnNewInappropriateWord(word) {
                this.restrictedWords.add(word);
                this.learningMemory.set(word, "User-flagged inappropriate content");
            }

            // ðŸ”¥ AI Neural Response - Suggest alternative words
            suggestSafeWords(input) {
                let suggestions = {
                    "sex": "relationship", "nude": "art", "porn": "cinema",
                    "violence": "conflict", "gore": "fiction"
                };
                return suggestions[input] || "âš  Please rephrase your message.";
            }
        }

        // âœ… Initialize FireGuard AI
        const fireGuard = new FireGuardAI();

        function sendMessage() {
            let userInput = document.getElementById("userInput").value;
            let chatbox = document.getElementById("chatbox");

            let checkContent = fireGuard.analyzeContent(userInput);
            if (checkContent.flagged) {
                chatbox.innerHTML += `<p>${checkContent.reason}</p>`;
            } else {
                chatbox.innerHTML += `<p>You: ${userInput}</p>`;
            }

            document.getElementById("userInput").value = "";
        }
    </script>
</body>
</html>
